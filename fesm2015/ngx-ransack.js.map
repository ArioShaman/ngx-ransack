{"version":3,"file":"ngx-ransack.js","sources":["../../../projects/ngx-ransack/src/lib/models/ransack.enum.ts","../../../projects/ngx-ransack/src/lib/ngx-ransack.service.ts","../../../projects/ngx-ransack/src/public-api.ts","../../../projects/ngx-ransack/src/ngx-ransack.ts"],"sourcesContent":["export enum Ransack {\n  Eq,\n  NotEq,\n  Gt,\n  Gteq,\n  GtAny,\n  Lt,\n  Lteq,\n  LtAny,\n  In,\n  NotIn,\n  Present,\n  Blank,\n  Cont,\n  NotCont\n}\n","import { Injectable } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\n\nimport { Ransack } from './models/ransack.enum';\nimport { IRansackParam } from './models/ransack-param.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxRansackService {\n  constructor() { }\n\n  /**\n    * Filters keys must be same with Options keys\n    *\n    * For example:\n    *\n    * filters: {\n    *   authorId: [1,2,3]\n    * }\n    *\n    * options: {\n    *   authorId: {\n    *     matcher: Ransack.In\n    *   }\n    * }\n  */\n\n  /** Filters is FormData */\n\n  /**\n    * Filters can take 3 types of Input params:\n    * Ransack enum operation\n    * Object of IRansackParam\n    * Array of objects IRansackParam\n    *\n    * For example\n    *\n    * {\n    *   authorId: {\n    *     matcher: Ransack.In,\n    *   },\n    *   price: [\n    *     {\n    *       matcher: Ransack.Gt,\n    *       from: 'min'\n    *    },\n    *    {\n    *       matcher: Ransack.Lt,\n    *       from: 'max'\n    *    }\n    *  ],\n    *  title: Ransack.NotEq,\n    *}\n  */\n\n  /**\n    * Options params:\n    *\n    ****\n    * matcher - choose ransack operation;\n\n    ****\n    * postfix - add postfix name to param, for example:\n    *\n    * option = {\n    *   author: {\n    *     postfix: 'id'\n    *   }\n    * }\n    *\n    * return: q[author_id_{matcher}]\n    *\n    ****\n    * name - change naming ransack params from object key to custom name, \n    * for example:\n    *\n    * options = {\n    *   authorId: {\n    *     name: 'authorIds'\n    *   }\n    * };\n    *\n    * return: q[author_ids_{matcher}]\n    *\n    ****\n    * from - choose value of param from input Object by key, for example:\n    *\n    * filters = {\n    *   price: {\n    *     min: 1,\n    *     max: 10\n    *   }\n    * };\n    *\n    * options = {\n    *   price: {\n    *     mathcer: Ransack.Gt,\n    *     from: 'min'\n    *   }\n    * }\n    *\n    * return: 'q[price_gt] = 1'\n  */\n\n  public toRansack(filters: any, options?: any): HttpParams {\n    let httpParams = new HttpParams();\n\n    const keys = Object.keys(filters);\n    keys.forEach((key) => {\n      if (Array.isArray(options[key])) {\n        /** If Options is Array of options */\n\n        options[key].forEach((option) => {\n          httpParams = this._setParam(option, filters, key, httpParams);\n        });\n      } else if (options[key] instanceof Object) {\n        /** If Options is Option object */\n\n        const option = options[key];\n        httpParams = this._setParam(option, filters, key, httpParams);\n      } else {\n        /** If Options is Ransack operation */\n\n        const option = {\n          matcher: options[key]\n        };\n\n        httpParams = this._setParam(option, filters, key, httpParams);\n      }\n    });\n\n    return httpParams;\n  }\n\n  private _setParam(\n    option: IRansackParam,\n    filters: any,\n    key: string,\n    httpParams: HttpParams\n  ): HttpParams {\n    let filter = filters[key];\n\n    const matcher = this._kebabStr(Ransack[option.matcher]);\n\n    const name = option.hasOwnProperty('name') ?\n      this._kebabStr(option.name) : this._kebabStr(key);\n\n    const postfix = option.hasOwnProperty('postfix') ?\n      `_${option.postfix}` : '';\n\n    if (option.hasOwnProperty('from')) {\n      filter = filter[option.from];\n    }\n\n    let paramName = `q[${name}${postfix}_${matcher}]`;\n\n    if (Array.isArray(filter)) {\n      paramName = paramName + '[]';\n\n      filter.forEach((filterEl) => {\n        httpParams = httpParams.set(paramName, filterEl);\n      });\n    } else {\n      httpParams = httpParams.set(paramName, filter);\n    }\n\n    return httpParams;\n  }\n\n  private _kebabStr(str: string): string {\n    return str.split(/(?=[A-Z])/)\n      .map((el) => el.toLowerCase())\n      .join('_');\n  }\n\n}\n","/*\n * Public API Surface of ngx-ransack\n */\n\nexport * from './lib/ngx-ransack.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}